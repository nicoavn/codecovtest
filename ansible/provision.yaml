
- name: web app provision
  hosts: webservers
  become: yes
  gather_facts: no
  vars_files:
    - "{{ lookup('env','ANSIBLE_ROLES_PATH') }}/includes/vars.yml"
  tags:
    - web
  roles:
    - role: letsencrypt
      letsencrypt_op: provision
      letsencrypt_domains: "{{ nginx_vhost_ssl_domains }}"
      tags:
        - letsencrypt-role

    - role: pyapp3
      pyapp3_op: provision
      tags: pyapp3-role

  tasks:
    - name: create rabbitmq vhost
      rabbitmq_vhost: name={{app_rabbitmq_vhost}} state=present
      tags:
        - rabbitmq
        - app

    - name: create rabbitmq user
      rabbitmq_user:
        user={{app_rabbitmq_user}}
        password={{app_rabbitmq_pass}}
        vhost={{app_rabbitmq_vhost}}
        configure_priv=.*
        read_priv=.*
        write_priv=.*
        state=present
        force=yes
      tags:
        - rabbitmq
        - app


- name: database provisioning
  hosts: dbservers
  become: yes
  gather_facts: no
  become_user: postgres
  tags:
    - db
  tasks:
    - name: ensure user exists
      postgresql_user: name={{app_db_user}} password={{app_db_pass}}

    - name: ensure database is created, set owner to user
      postgresql_db: name={{app_db_name}} owner={{app_db_user}}

    - name: give user ownership of public schema
      command: "psql {{app_db_name}} -c 'alter schema public owner to \"{{app_db_user}}\"'"

